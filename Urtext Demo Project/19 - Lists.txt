Lists

[[ 		
	Dynamic definitions can contain arbitrary text. The only parts read by the compiler are the function names with their parameters in parentheses. Like nodes, you can format/indent/comment these definitions any way you want.

	This definition targets ID m1r, which appears immediately below: | Example: Nodes from the Documentation >m1r.
	ID(>m1r) 

	The asterisk means to include all nodes in the project. 
	INCLUDE(*)

	The LIMIT parameter limits the output to the specified number of results. 
	Note that the default sort order is alphabetical. 
	LIMIT(20)

	FORMAT(indent:3)
	Here the FORMAT parameter is used to indent the output 3 tabs.
	HEADER(Example: Nodes from the Documentation\n flags::exclude_from_export)

	]]

			{ Example: Nodes from the Documentation
 flags::exclude_from_export
Dynamic Nodes >k8p
More Dynamic Definitions >87g
Tab Completion >r87
Linking Nodes Together >r9q
Freeform, Flexible Syntax >wzk
Description >yv2
Timestamps >8w2
Provides a title for the entire project >xqu
(untitled) >5m7
Comparison To Other Tools >h8z
(untitled) >nad
can have arbitrary other metadata >xlc
(untitled) >wyi
Bracket nodes can be nested arbitrarily deep inside one another. >xdd
Welcome to Urtext >a41
(untitled) >5pr
Command Binding >e8x
Another Example Level >5pq
Open source >u8o
Example inline node within compact node. >9up
((>twz:7)) @m1r}

	f>./files/example-list-1-definition.png
	f>./files/example-list-1.png

   Note that the at the bottom of the node is the reserved key `def` which refers to the node containing the definition.


@twz 