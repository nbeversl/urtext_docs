Lists

[[ 		
	Dynamic definitions can contain arbitrary text. The only parts read by the compiler are the function names with their parameters in parentheses. Like nodes, you can format/indent/comment these definitions any way you want.

	This definition targets ID m1r, which appears immediately below: | Example: Nodes from the Documentation >m1r.
	ID(>m1r) 

	The asterisk means to include all nodes in the project. 
	INCLUDE(*)

	The LIMIT parameter limits the output to the specified number of results. 
	Note that the default sort order is alphabetical. 
	LIMIT(20)

	FORMAT(indent:3)
	Here the FORMAT parameter is used to indent the output 3 tabs.
	HEADER(Example: Nodes from the Documentation\n flags::exclude_from_export)

	]]

			{ Example: Nodes from the Documentation
 flags::exclude_from_export
Tab Completion >r87
(untitled) >zje
(untitled) >nad
Linking Nodes Together >r9q
Provides a title for the entire project >xqu
Re-add title links to tab completions? >ekk
(untitled) >l8b
Local >2yx
Innermost level >e5n
Reserved key for every node, used here to specificy this node as containing project settings >egg
Issue >dim
Generating a node ID manually >rfp
Welcome to Urtext >a41
Bracket nodes can be nested arbitrarily deep inside one another. >xdd
Example Compact Node >d7b
(untitled) >00l
project_settings >00n
Lists >twz
From Target Node >imr
Uses >lhs
((>twz:7)) @m1r}

	f>./files/example-list-1-definition.png
	f>./files/example-list-1.png

   Note that the at the bottom of the node is the reserved key `def` which refers to the node containing the definition.


@twz 