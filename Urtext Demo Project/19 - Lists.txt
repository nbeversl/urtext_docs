Lists

[[ 		
	Dynamic definitions can contain arbitrary text. The only parts read by the compiler are the function names with their parameters in parentheses. Like nodes, you can format/indent/comment these definitions any way you want.

	This definition targets ID m1r, which appears immediately below: | Example: Nodes from the Documentation >m1r.
	ID(>m1r) 

	The asterisk means to include all nodes in the project. 
	INCLUDE(*)

	The LIMIT parameter limits the output to the specified number of results. 
	Note that the default sort order is alphabetical. 
	LIMIT(20)

	FORMAT(indent:3)
	Here the FORMAT parameter is used to indent the output 3 tabs.
	HEADER(Example: Nodes from the Documentation\n flags::exclude_from_export)

	]]

			{ Example: Nodes from the Documentation
 flags::exclude_from_export
Lists >twz
Projects >dce
Reserved key for every node, used here to specificy this node as containing project settings >egg
become child nodes of their containing node. >hiz
Nodes >i81
Other Features >kne
Future Proof >xat
Extensibile >gn8
From Target Node >imr
(untitled) >5m7
Uses >lhs
More Features to Try >q0l
Bracket Nodes >xgr
Example inline node within compact node. >9up
require an ID >frm
project_settings >00n
Templating the Output with the SHOW parameter >8p5
(untitled) >00l
Dynamic Nodes >k8p
Example Compact Node >d7b
((>twz:7)) @m1r}

	f>./files/example-list-1-definition.png
	f>./files/example-list-1.png

   Note that the at the bottom of the node is the reserved key `def` which refers to the node containing the definition.


@twz 