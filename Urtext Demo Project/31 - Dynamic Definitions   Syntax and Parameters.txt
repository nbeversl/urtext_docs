More Dynamic Definitions _

This example shows a few more directives for dynamic definitions.

"Collections" aggregate metadata entries with their context; the same node may appear many times in a collection if it contains many metadata entries matching the queried parameters.



{ 
((>87g:284)) @rwb}

[[ ID(>rwb)
		COLLECT(issue=*)
		COLLECT(timestamp=*)
							

		SHOW($title)			Supplies a template for the output of each result. 
						Accepts keynames, denoted with `$`, arbitrary text, and Unicode characters including \n, \r, \t.

						Words preceded by `$` are are evaluated as metadata keys, replaced in the output by their value(s).
						Note that key names themselves are not displayed in the output. Add keynames manually if you want them included.

						Example:
						SHOW(Author: $author, Date: $date\n)

						In addition to all user-defined metadata keys, the following tokens are included:

						SHOW(

							$title 
							Displays the node title, default or via the `title` meta key

							$link
							Displays a link to the node

							$date 
							Displays the node's date in the project's default timestamp format

							$meta
							Shorthand to show all metadata for every node, formatted as by "consolidate metadata"

							$contents:120
							Displays the contents of the node. Optional excerpt/length specifier after the colon
							)
		
		HEADER()		Adds additional arbitrary/freeform text to the beginning of the output. This can include any syntax 
						valid inside Urtext nodes, including metadata.
		
		FOOTER()		Adds additional arbitrary/freeform text to the end of the output. Same as for HEADER().
	

		FORMAT()		Specificies additional global formatting of the output. There are intended primarily for formatting 
						exported text, but can be applied to any output. Accepts one or more predefined flags:
						
						-preformat or -pre
						Wraps preformatted text (trees, etc.) in backticks to preserve preformatting, 
						for instance, for Markdown contenxts.

						-multiline_meta or -mm
						Places dynamic node metadata on separate lines instead of separated by;

						-indent: or -i
						Indents the dynamic node by the number of spaces specified in parentheses.
						Example: FORMAT(-indent:20)

]]  


@87g 