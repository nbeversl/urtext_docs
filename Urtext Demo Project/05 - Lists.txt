Lists

[[ 		
	Dynamic definitions can contain arbitrary text. The only parts read by the compiler are the function names with their parameters in parentheses. Like nodes, you can format/indent/comment these definitions any way you want.

	This definition targets ID m1r, which appears immediately below: | Example: Nodes from the Documentation >m1r.
	ID(>m1r) 

	The asterisk means to include all nodes in the project. 
	INCLUDE(*)

	The LIMIT parameter limits the output to the specified number of results. 
	Note that the default sort order is alphabetical. 
	LIMIT(20)

	FORMAT(indent:3)
	Here the FORMAT parameter is used to indent the output 3 tabs.
	HEADER(Example: Nodes from the Documentation\n flags::exclude_from_export)

	]]

			{ Example: Nodes from the Documentation
 flags::exclude_from_export
Future Proof >xat
(untitled) >5pr
Another level >80d
Lists >twz
(untitled) >5m7
Nodes >i81
Bracket Nodes >xgr
Templating the Output with the SHOW parameter >8p5
Plain Text >7rg
Identifies the home node for the project, connected to the "Home" key >d6u
Other Features >kne
Metadata >00x
Compact Nodes >kpz
Example inline node within compact node. >9up
Another Example Level >5pq
become child nodes of their containing node. >hiz
Dynamic Node Definitions >o13
require an ID >frm
Projects, Structure and Compiling >01x
Manually >x43
((>twz:7)) @m1r}

	f>./files/example-list-1-definition.png
	f>./files/example-list-1.png

   Note that the at the bottom of the node is the reserved key `def` which refers to the node containing the definition.


@twz 