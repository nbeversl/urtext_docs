Extending Node Lists Into Trees using DEPTH

By default, Node lists are "one-dimensional". With the DEPTH parameter, you can expand these to hierarchical nested nodes up to arbitrary depth, whether from | Bracket Nodes >004 or from |  ?  >lmu.

[[  
	These parameters are mostly the same as for the previous examples ( see | Lists >twz) 
	Here they are strung together on a single line; recall that formatting does not matter.
	ID(>nc6) +(*) FORMAT(indent:2) HEADER(Example List 3)

	Here we have omitted the LIMIT parameter, so the definition returns all nodes in this documentation.

	The DEPTH paramter specifies how many levels deep we want to view nested hierachies. We've set it to 5 to avoid an enormous output, but try changing the number (or other parameters in the definition) to see the difference in output. 
	DEPTH(5)
]]

{ Example List 3
Dynamic Definitions >07u
Types of Nodes >07q
Dynamic Definitions : Syntax and Parameters >87g
Quick Tag from Other: >zep
(untitled) >mbm
Insert Dynamic Definition with Node: >jsc
JSON >njo
About Compact Nodes >frm
Nav Backward: >3hy
Other Features >kne
This node is just here as a destination from the node pointer in  Basic Syntax >ttt
Comparison To Other Tools >h8z
Nodes Excluded from the Table of Contents >jkl
Hash Key >4ry
Project Naming (Identification) >tgp
Searching >rr3
Dependencies and Installation >2fn
Syntaxes : >r0w
History >a8q
This binds the definition to a specific piece of text, rather than to the output of a node. So when you click on this, anywhere: >e8x
fourth level >5pq
Using Multiple Projects >ipy
Lists >twz
Reindex Files >qd2
Time Zones >7w6
Compact Nodes >kpz
Content Insertion >kxh
HTML >xsh
Example : Fragment Exported to HTML >baq
Templating the Output with the SHOW parameter >8p5
Using/Adding Existing Files >rij
Tracking Node Dates and Times >cee
Urtext Demo Project >xgj
Errors and Warnings >bpk
Uses >lhs
Node IDs >01q
Insert Inline Node: >rzx
Installation and Setup for the Sublime Text Implementation >01u
Opening Links >01w
Projects, Structure and Compiling >01x
Features and Philosophy >006
Syntax and Format >005
Bracket Nodes >004
Sublime Text Interface Tips >003
Full Screen / Distraction Free Mode >002
Example Child Node Using a Node Pointer >001
Copy Links >kqz
Syntax Highlighting >01d
Hiding Line Numbers >01e
Reserved Keys >fo2
Exporting >ezg
Example Compact Node >d7b
The Node Browser >01i
Nodes >01j
Search Using Dynamic Nodes >uy4
Example Recursive Node Tree >01n
Provides a way to give nodes a sort order in  The Node Browser .  Indexed nodes will sort before (above) the others, lowest numbers appearing first. To utilize, add a two-digit sort index (00-99) to a node, such as: >00z
Plaintext >l60
Getting Started, Using Either the Demo or Reference Documentation >l7p
Bullet Nodes >j6t
Download Dependencies from a Monorepo >arl
Traverse Mode >00w
Save on Focus Lost >sqq
Other dynamic instructions >x0c
Node Browser, Include All Projects: >hyh
Copy Link to this Node With Title: >05x
Open Urtext Link: >ngh
Pull/Pop Node >on7
Urtext >013
In-Progress / Experimental / Wish List >014
Hiding Tabs >015
Metadata >00x
Reference: Key Bindings >018
Extending Node Lists Into Trees using DEPTH >thz
Viewing Linked Relationships >00u
Plain Text >7rg
Linking to Files and Other Resources >00q
Add Node ID: >gv9
Documentation >ooe
Sublime Text tools to help with linking >00m
Project Settings >00l
Links and Pointers >00j
Extensibile >gn8
become child nodes of their containing node. >hiz
Files >00p
Open Random Node: >q5f
Web / HTTP(S) >00o
Insert Timestamp: >7b8
Projects >dce
General Syntax >8dw
Future Proof >xat
Pythonista >iy8
can have arbitrary other metadata >xlc
Nav Forward: >yan
Installation and Setup (Sublime Text / Desktop) >6cd
File Nodes >ekz
Navigation >k7b
Urtext Reference >ac5
Sublime : select                  from the command pallete. This provides an input panel on the lower edge of the screen. Dynamically search results will be shown in a scratch view as you enter search terms. Press ESC to cancel.  Results include links to source nodes. >k8v
Sublime Text Key Bindings and Operations >1vs
Dynamic Nodes >k8p
Python >ljr
About Urtext >tkv
Disable Prompts for File Reload >023
Cross-Project Linking >7lx
Trailing Node IDs >2a3
Download and Install Dependencies Manually >774
Reference Documentation >6jq
Freeform, Flexible Syntax >wzk
Description >yv2
tag_all >yin
Timestamps >2i4
iPhone/iPad/iOS >01y
project_settings >d0s
Embedded Syntaxes and Pass Markers >oy5
Synchronator Setup >01z
Open source >u8o
Toggle Traverse Mode: >hcf
Cheatsheet >yq8
Generating a node ID manually >rfp
Dynamic Titles >4vu
List Projects: >g5a
Word Wrap in Traverse Mode >xci
fifth level >e5n
Pythonista : Use the "?" Urtext Button. Results will be updated in real time in the view behind the search field. To exit, tap outside the search field. >q8j
Toggle History Traverse: >ndc
second level >6qj
Generic >6ys
Full Text Search >4p9
Insert Link to New Node: >sxk
Search >k67
(untitled) >478
Home Node: >5ab
Local >2yx
Example : Urtext Documentation Exported in Markdown to a File >m9d
Urtext Usage Guide and Reference >a5m
Basic Syntax >znj
File Naming >01m
third test level >80d
Features >vnv
Inserting a Node ID manually >04s
Copy Link to this Node: >vel
Insert Bracket Node, minimal:                    (OSX),                    (Windows, Linux) >6ym
Example Bracket Node >ywi
Insert Compact Node: >1qq
History >prp
Example first level >8fv
Node Titles >ue2
Node Browser, Forward Links: >ylo
Generated automatically in a dynamic node, contains a link to the node containing the definition. >5cq
Using a Sublime Project for an Urtext Project >c3n
Case-sensitivity >l36
(untitled) >858
Escaping Curly Brackets >8a8
Example inline node within compact node. >9up
Sublime >osu
New Node: ctrl + shift + ; >ve3
Node Browser: >vdr
Node Browser, Backlinks: >1ea
Links >0y2
User Interface Elements >3n6
Remove Indent Guides >1rc
Overrides the node title, which is by default the full first non-whitespace line. >pz3
User-Defined >lwg
About the README >pjk
Duplicate Node IDs >bzv
((>thz:245)) @nc6}

@thz
from::wwci-00407.local