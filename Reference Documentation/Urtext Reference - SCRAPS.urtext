
Urtext Reference - SCRAPS _

{ Lists

[[ 		
	Dynamic definitions can contain arbitrary text. The only parts read by the compiler are the function names with their parameters in parentheses. Like nodes, you can format/indent/comment these definitions any way you want.

	This definition targets ID m1r, which appears immediately below: |? Example: Nodes from the Documentation >.
	>(|? Example: Nodes from the Documentation >) 

	The asterisk means to include all nodes in the project. 
	INCLUDE(*)

	The LIMIT parameter limits the output to the specified number of results. 
	Note that the default sort order is alphabetical. 
	LIMIT(20)

	FORMAT(indent:3)
	Here the FORMAT parameter is used to indent the output 3 tabs.
	HEADER(Example: Nodes from the Documentation\n flags::exclude_from_export)

	]]

{ Viewing Linked Relationships
    
    Elaborate writing and reference systems such as wikis often linking nodes together in tangled and intricate ways. While Urtext cannot draw diagrams of this kind (called acyclic graphs) in plaintext, it can represent these relationships from the perspective of any one node: Position the cursor in the desired node and select "Urtext : Show Linked Relationships..." The currently selected node will be displayed as root; all nodes linking into this nodes, and recursively into those nodes, will be displayed above the root; all files linked from this node, and recursively from those nodes, will be displayed below. Circular references are represented up to one iteration.

    These diagrams are displayed as Sublime "scratch" views, meaning they will never report as being dirty (unsaved). They are intended for one-time/temporary use and will not update when a node/file changes. To make permanent and dynamically updated diagrams, see |? ? >e82.

    
}



<Tue., Sep. 28, 2021, 02:32 PM> }



{ Command Binding _


This binds the definition to a specific piece of text, rather than to the output of a node. So when you click on this, anywhere:
 ##REINDEX FILES
 ... it runs.

   >>>REINDEX(df) asdfd}


{ Compact Nodes _

Key: | Insert Bullet Node: ctrl + shift + 6 >

For text content requiring only a single line, such as list items, very short notes and similar, use the bullet character (`•`) as the first non-whitesoace character on a new line. This defines a new node as a child of the node in which the • character appears, with the closing wrapper being the end of the same line. 

Like all nodes, it can contain metadata and even inline nodes, as long as the entire contents, including wrappers and metadata, are contained on a single line. (Note that "line" in this case refers to consecutive characters between explicit line breaks, and not to lines in the editor, which may be arbitrarily wrapped.)


• Example Compact Node  {  Example inline node within compact node.  } flags::exclude_from_export


}