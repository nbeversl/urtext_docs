Metadata  _

{ Syntax _

Every node can have unlimited metadata. Metadata is assigned using double-colon-separated key/value(s), with the value(s) containing an optional timestamp. Examples:

      purpose::This node describes Metadata in Urtext <Thu., Dec. 15, 2022, 12:50 PM>
      audience::Urtext user

Nodes can be searched and sorted by their metadata using | Dynamic Definitions >. Metadata entries "remember" their location, allowing them to double as contextual bookmarks.

Other than a few reserved key/value pairs, metadata is user-defined. Keys must be single words, though characters such as dash and underscore are allowed. Values may include spaces. Terminate metadata entries using either a new line or a semicolon. Using the semicolon option, several entries may be strung together on a single line:

    one_key::some value; another_key::some_other_value <Tue., Dec. 12, 2023, 01:11 PM>;
}

{ Timestamps _

    Text between two angled brackets (`< >`) is parsed as a timestamp whenever the first character inside the brackets is not `!`, `-` or whitespace. Urtext utilizes the Python `dateutil` module to loosely parse dates in almost any format. For instance, all of the following are valid:

          <Fri., Oct. 09, 2020, 09:59 AM>
          <February 23, 1848>
          <May 1946>
          <1066>

    Use the hotkey | Insert Timestamp: ctrl + shift + t > to insert the current date and time anywhere. The format of the resulting timestamp can be changed in | project_settings > using the `timestamp_format` > key.

    Timestamps may also be used anywhere, without a keyname; "inline" timestamps that are not part of a keyed metadata entry are auto-assigned the system keyname `inline-timestamp`. Like all metadata, they remember their position and may function doubly as anchors/bookmarks. }

{  Tracking Node Dates and Times _

    Reliance on the operating system's "created" or "modified" file date metadata is avoided, since these can be inadvertently overwritten during ordinary file system operations. Instead, new file-level nodes receive a "timestamp" metadata key by default when created.
  
{   Time Zones _

    Time zones are not required. If no time zone is present, Coordinated Universal Time (UTC) is interpreted by default for parsing/comparison purposes. To modify this default, set the `timezone` key in | project_settings 
}   

{  Case-sensitivity _

  For comparison, filtering, and sorting purposes, metadata values are not case-sensitive by default. To change this, set the key(s) you want to be case sensitive using the `case_sensitive` key in | project_settings >. 

}

{ Reserved Keys

  There is only one reserved key is Urtext:
  `title` overrides the node title, which is by default the full first non-whitespace line. 

  `_inline_timestamp`

  `_newest_timestamp`

  `_oldest_timestamp`
   
}

{ Hash Key _

  If you use one keyword a lot and want a shortcut to use the "hashtag" instead of the keyname, set the `hash_key` value in | project_settings >.

}

{ Propagating metadata to descendents _

  The asterisk (*) character assigns metadata to childen and descendants of nodes:

  To assign the entry to all children (but not the node containing the metadata):
  *key::value

  To include also the node containing the metadata:
  +*key::value

  To assign the entry to all descendants (but not the node containing the metadata):
  **key::value

  To include also the node containing the metadata:
  +**key::value
} 
} 