{"1676551283": "@@ -19135,16 +19135,8 @@\n %0A%09%7D%0A\n-%7D       \n     \n", "1676551362": "@@ -1,8 +1,9 @@\n+%0A\n How To U\n", "1676551112": "@@ -6904,25 +6904,24 @@\n  file:%0A%0A%09%09%25%25\n--\n JSON%0A%09%09%09%22set\n@@ -14323,14 +14323,13 @@\n %09%09%25%25\n--\n HTML%0A\n+\n %0A%09%09%09\n@@ -14386,17 +14386,8 @@\n %09%09%25%25\n--HTML-END\n %0A%09  \n@@ -14400,25 +14400,24 @@\n %7B JSON%0A%0A%09%09%25%25\n--\n JSON%0A%0A%09%09%09%7B %09\n@@ -14478,17 +14478,8 @@\n %09%09%25%25\n--JSON-END\n %0A%09%7D%0A\n@@ -14494,23 +14494,22 @@\n on%0A%0A%09%09%25%25\n--PYTHON\n+Python\n %0A%09%09%0A%09%09# \n@@ -14560,19 +14560,8 @@\n %09%09%25%25\n--PYTHON-END\n    %0A\n@@ -14579,25 +14579,24 @@\n intext%0A%0A%09%09%25%25\n--\n PLAINTEXT%0A%0A%09\n@@ -14649,254 +14649,15 @@\n %09%09%25%25\n--PLAINTEXT-END %0A%09%09%7D%0A%0A%0A%0A%09%7B Documentation%0A%0A%09%09%25%25-DOC%0A%0A%09%09The %22DOC%22 pass marker is used in parts of this documentation in order to Urtext syntax highlighting without parse or execute anything, for documentation and example purposes.%0A%0A%09%09%25%25-DOC-END%0A\n %0A%09%09%7D\n+%0A%0A%0A\n  %7D%0A%0A\n@@ -19127,12 +19127,1012 @@\n y.%0A%0A%09%09%7D%0A%0A%09%7D%0A\nn", "1676551122": "@@ -19131,19 +19131,16 @@\n %09%09%7D%0A%0A%09%7D%0A\n- %7D \n         \n", "1676551132": "@@ -19165,32 +19165,36 @@\n                 \n+ %7D %7D\n                 \n", "1676551215": "@@ -20064,29 +20064,28 @@\n                             \n- \n", "1676551142": "@@ -19175,18 +19175,16 @@\n        %7D\n- %7D\n         \n", "1676547932": "How To Use Urtext _\n\n{ Syntax _\n\n\n\tAll text is plain content unless inside a timestamp wrapper, dynamic definition wrapper, or preceded by a metadata assignment operator and keyname.\n\n\t`{` and  `}`\n\tBracket Node Wrappers. Can appear anywhere. Can be nested aribrarily deep.\n\tMore information: | Bracket Nodes >\n\n\t`| [node title] >`\n\tNode Link. Links to the specified node by title, like a hyperlink. \n\tMore information: | Links >\n\n\t`>>`\t\t\n\tNode Pointers: Embeds the specified node as though it were included bracket using wrappers `{ }` (see above)\n\tMore information: \n\t\u00a1\n\t`|`\n\tTitle Pipe. Placed immediately before a node link or node pointer (whitespace is ok), dynamically populates the linked node title.\n\tExample and more info: | Dynamic Titles >\n\n\t`\u2022`\n\tBullet Node marker. Must be the first non-whitespace character on a line. Must include an ID in order to parse as a node.\n\tMore information: | Bullet Nodes >\n\n\t`<` and `>`\n\tTimestamp wrappers. Parses user-defined datetime strings, with many default formats built in.\n\tThe first character inside the brackets may not be `!`, `-`, or whitespace.\n\tExample: <Tue., Jul. 28, 2020, 07:43 PM>\n\n\tMore information: | Timestamp Syntax and Format >\n\n\t`::`\n\tMetadata assignment operator. Accepts a user-defined key on the left, and values and timestamps on the right.\n\tMetadata may appear anywhere. They attach to their containing (parent) node, remember their exact location, and can serve as anchors/bookmarks to context. Keys must be single words (underscore permitted), values may be any characters, terminated with a semicolon or newline. The pipe character (`|`) separates multiple values for a single key.\n\n\n\t[[ FILE(Basic Syntax.md) MARKDOWN(root=znj) ]] \n}\n\n\n\n{ The Node Browser _\n\n\tThe \"Node Browser\" utilizes Sublime Text's dropdown to browse all nodes in the project. Press Control-Shift-E or select \"Urtext: Node List\" from the Sublime command palette (Shift-Super-P). Type part of a node's title to locate and open it with Enter.\n\n\tBy default, nodes are sorted by their time of creation, with most recent first. \n\tThis can be modified using the `node_browser_sort` key in | project_settings >.\n\n\tA \"traversable\" Node Browser can be created in plaintext using a dynamic definition such as: \n\n\t[[ ID(Example Node Title) +(*) ]]. \n\n    (see | Dynamic Definitions >)\n\n\t}\n\n\n{ Using the Sublime Text Command Pallete with Urtext _  \n\n\tAll key bindings and commands can be accecesed through the Sublime Text Command Pallete, which is mapped by default to Ctrl-Shift-P. To see all the Urtext commands, type \"Urtext\" to reduce the list to matching commands. Key bindings are shown at the far right of each entry. \n\n}\n\n\n\n{ Sublime Text Urtext Key Bindings  _\n\n\tBelow are the default key bindings for Sublime Urtext commands. \n\n\t{ Navigation _\n\n\t\t- Open Urtext Link:\t\t\t\t\t\tctrl + shift + / \t\t\t\t\n\t\t- Navigate Forward: \t\t\t\t\tctrl + shift + .\t\t\t\t\t\n\t\t- Navigate Backward: \t\t\t\t\tctrl + shift + ,   \t\t\t\t\n\t\t- Home Node: \t\t\t\t\t\t\tctrl + shift + h \t\t\t\t\t\n\t\t- Open Random Node: \t\t\t\t\tctrl + shift + f \t\t\t\t\n\t\t- Node Browser: \t\t\t\t\t\tctrl + shift + e  \t\t\t\t\n\t\t- Node Browser, Include All Projects: \tctrl + shift + *  \n\t\t- Node Browser, Forward Links: \t\t\tctrl + shift + right \n\t\t- Node Browser, Backlinks: \t\t\t\tctrl + shift + left   \t\n\t\t- List Projects: \t\t\t\t\t\tctrl + shift + o \n\t\t- Keyword Browser:\t\t\t\t\t\tctrl + shift + x\n\t\t- Metadata Browser:\t\t\t\t\t\tctrl + shift + m\n\t\t- Browse Associated Nodes:\t\t\t\tctrl + shift + space\n\t\t\t\t\n\t } \n\n\t{ Content Insertion _\n\n\t\t- New Node: \t\t\t\t\t\t\tctrl + shift + ;  \t\t\t\t\t\n\t\t- Insert Timestamp: \t\t\t\t\tctrl + shift + t   \t\t\t\n\t\t- Insert Bracket Node with Timestamp:\tctrl + shift + 1\n\t\t- Insert Bracket Node Wrapper:  \t\tctrl + shift + 2\n\t\t- Insert Bracket Node, Minimal :\t\tctrl + shift + Left-Bracket  \t\t\t\n\t\t- Insert Dynamic Definition with Node: \tctrl + shift + Right-Bracket  \n\t\t- Insert Bullet Node: \t\t\t\t\tctrl + shift + 6  \n\t\t- Insert Link to Existing Node: \t\tctrl + shift + l \t\t\n\t\t- Insert Link to New Node: \t\t\t\tctrl + shift + '\t\t\n\t\t- Quick Tag from Other: \t\t\t\tctrl + shift + 0 \t\t\n  \t}\n\n\t{ Copy Links _\n\n\t\t- Copy Link to Node: \t\t\t\t\tctrl + shift + c \n\t\t- Copy Link to Node With Project: \t\tctrl + shift + super + c  \n\t  }\n\n\t{ Traverse Modes _\n\n\t\t- Toggle Traverse Broswer: \t\t\t\tctrl + shift + r  \t\t\n\t\t- Toggle Travers History: \t\t\t\tctrl + shift + g  \n\t}\n\n\n\t{ Changing Key Bindings _ \n\n\tKey Bindings can be changed, if desired, by modifying the following files in the Sublime Urtext package:\n\n\t\t\tDefault (Linux).sublime-keymap\t\n\t\t\tDefault (OSX).sublime-keymap\t\n\t\t\tDefault (Windows).sublime-keymap \n\n\t}\n}\n\n\n{ Sublime Text Interface Tips _\n\t\n\n\tHere are some tips for best leveraging Sublime's great UI features while using Urtext.\n\n\t{ Syntax Highlighting _\n\n\t\tThe Sublime Text package includes a syntax definition file in YML format (`sublime_urtext.sublime_syntax`), along with two color schemes that provide syntax highlighting. Syntax highlighting makes everything easier by showing depth of node nesting and dimming certain elements of the syntax. Select the Sixteen (for light) or Monokai (for dark) color schemes in Preferences -> Color Scheme ... \n\n\t\tThen change to the Urtext syntax by selecting it in View -> Syntax -> Urtext. To avoid having to do this for every file, select View -> Syntax -> Open All with Current Extension As ... -> Urtext. (This can be undone by repeating the same but selecting Plain Text.)  }\n\n\t{\tHiding Tabs _\n\n\t\tIf you prefer a spare, terminal-like view, hide tabs: View -> Hide Tabs.\n\t\tThis preference can also be set on a per-(Sublime)-project basis. See the Sublime documentation.  }\n\n\t{  Hiding Line Numbers _\n\n\t\t\tFor an extra-clean look, hide line numbers by adding:\n\t\t\t\t\n\t\t\t\t%%-JSON\n\t\t\t\t\n\t\t\t\t\"settings\" : {\n\t\t\t\t\t \"line_numbers\": false,\n\t\t\t\t},\n\t\t\t\t\n\t\t\t\t%%-JSON-END\n\n\t\t\t... to your Sublime project settings file. \n\n\t\t\t(Ignore the JSON syntax pass markers above beginning with `%%`. See | Escaping Sections of Text > ) }\n\n\t{  Full Screen / Distraction Free Mode _\n\n\t\tSince you can navigate entirely from within files, Urtext works great in Sublime's Distraction Free Mode. View -> Enter Distraction Free Mode.  }\n\n\t{ Disable Prompts for File Reload _\n\n\t\t Urtext does a lot of writing to files on the fly, often when they are already open. To avoid seeing a dialog every time, add add the following to your Sublime project settings or User Preferences file:\n\t\t\t\t %%-JSON\n\t\t\t\t \n\t\t\t\t \"settings\" : {\n\t\t\t\t\t\"always_prompt_for_file_reload\": false,\n\t\t\t\t},\n\t\t\t\t\n\t\t\t\t%%-JSON-END\t\t\n\t\t \n\t}\n\n\t{  Remove Indent Guides _\n\n\t\tFormatting plaintext using tab indentions can look messy if indent guides are on. To turn them off, add to your Sublime project settings file:\n\t\t\t\n\t\t\t%%-JSON\n\t\t\t \"settings\" : { \n\t\t\t\t\"draw_indent _guides\": false,\n\t\t\t}\n\t\t\t%%-JSON-END\n\t}\n\n\t{  Save on Focus Lost _\n\n\t\tUrtext recompiles your project every time a file changes. To make this more automatic, and to reduce the need to manually press save after every edit, add to your Sublime settings file:\n\n\t\t%%-JSON\n\t\t\t\"settings\" : { \n\t\t\t \"save_on_focus_lost\": true \n\t\t\t}\n\t\t%%-JSON-END\n\t\n\t}\n\n\t{  Using a Sublime Project for an Urtext Project _\n\t\n\t\t( see https://www.sublimetext.com/docs/3/projects.html )\n\n\t\tYou don't need to define a Sublime Project for the Urtext Project, but if you intend to do more than one thing at a time in Sublime, it's convenient to have one; you can then use Select Project -> Quick Switch Project (Ctrl-Super-P) to switch among them.  \n\n\t}\n}\n\n\n{ Dynamic Definitions - Syntax and Parameters _\n\n\tDynamic definitions are powerful instructions for dynamically building nodes from other nodes. Dynamic definitions display content from other nodes in a target dynamic node. \n\n\tDefinitions can be written anywhere; it is not necessary to store a definition in the same file to which it refers. (Definitions cannot, however, be stored in the node they target, since they would overwrite themselves.)\n\n\tDynamic definitions are wrapped with double left and right square brackets(`[[`,`]]`). There are no restrictions on spacing, indentation, newlines, or other arbitrary text or whitespace. The order of parameters within a definition is unimportant; they are evaluated as a group.\n\n\tThis dynamic definition below is for documentation and does not actually do anything. It rather lists every parameter along with an explanation of its use and purpose. For example uses, see |  ?  >k8p\n\n\n\t[[ \tID() \t\t\tTarget node to dynamically populate with output.\n\t\t\t\t\t\tAccepts a node title or link t(`| Node title >`)\n\n\t\tINCLUDE()  \t\tNodes to include. \n\t\tor +()\n\t\t\t\t\t\tAccepts one or more key/value pairs and optional parameters.\n\t\t\t\t\t\t\n\t\t\t\t\t\tComparisons:\n\n\t\t\t\t\t\t\t`=` means equal to\n\t\t\t\t\t\t\t\tINCLUDE(key = value)\t\n\t\t\t\t\t\t\t\tIncludes all nodes with the given key containing the given value\n\n\t\t\t\t\t\t\t`?` means \"contains\"\n\t\t\t\t\t\t\t\tINCLUDE(_contents ? some text or content)\n\t\t\t\t\t\t\t\tIncludes all nodes containing \"some text or content\" in their text contents.\n\t\t\t\t\t\t\t\t(See also -search)\n\n\t\t\t\t\t\t\t`*` means \"anything\"\n\t\t\t\t\t\t\t\tINCLUDE(index = *)\n\t\t\t\t\t\t\t\tIncludes all nodes containing the key `index`\n\n\t\t\t\t\t\t\tUse semicolon or newline to separate entries, as everywhere in Urtext.\n\t\t\t\t\n\t\t\t\t\t\tAdditional Flags:\n\n\t\t\t\t\t\t\tAdditional flags can be included in \n\n\t\t\t\t\t\t\tINCLUDE(*) or +(*)\n\t\t\t\t\t\t\t\tIncludes all nodes in the project\t\t\t\t\t\t\t\t\t\n\n\t\t\t\t\t\t\t`-blank`\n\t\t\t\t\t\t\t\tIncludes all nodes that contain only whitespace as their content\n\n\t\t\t\t\t\t\tNote these additional flags substitute for semicolons/newlines as separators between entries.\n\n\t\t\t\t\t\tSystem keys:\n\n\t\t\t\t\t\t\tUrtext includes some built-in keys whose values are generated automatically. \n\t\t\t\t\t\t\tThese may also be used in INCLUDE(): \n\n\t\t\t\t\t\t\t\t`_contents` : Refers to a node's text contents. \n\t\t\t\t\t\t\t\t\tCan be used, for instance, for full text search or comparison.\n\t\t\t\t\t\t\t\t\tINCLUDE(_contents ? Western Civilization)\n\t\t\t\t\t\t\t\t\tIncludes any node that contents the text \"Western Civilization\"\n\t\t\t\t\t\t\t\t\t(comparisons are case-insensitive)\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t`_links_to`\t\t\t\n\t\t\t\t\t\t\t\t\tINCLUDE(_links_to = \"some node\")\n\t\t\t\t\t\t\t\t\tIncludes all nodes that contain links to node title\n\n\t\t\t\t\t\t\t\t`_links_from`\n\t\t\t\t\t\t\t\t\tINCLUDE(_links_from = \"some node\")\n\t\t\t\t\t\t\t\t\tIncludes all nodes to which node links\n\n\n\t\tEXCLUDE()\t\tAccepts all the same parameters as INCLUDE()\n\t\tor -()\t\t\tAlways evaluated after INCLUDE(), excludes the specified nodes from the result.\n\t\t\t\t\t\t\n\t\t\n\n\t\tSORT()\t\t\tSorts the results. Entries can be keynames (include system-defined ones, see below)\n\t\t\t\t\t\tor flags, with multiple keys separated by semicolon or newline.\n\n\t\t\t\t\t\tSORT(\n\n\t\t\t\t\t\t\t[ key name ]\t\tSorts by the value of the given key. Default is alphabetical.\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t  \t-num or -n  \t\tSorts the results numerically if possible.\n\t\t\t\t\t\t  \t\t\t\t\t\tThe default sort is alphabetical.\n\n\t\t\t\t\t\t\t-timestamp or -t  \tSort by timestamp\n\n\t\t\t\t\t\t    -reverse or -r \t\tReverses the sort order. Applicable to any of the above.\n\n\t\t\t\t\t\t\t)\n\n\t\t\t\t\t\t\tExample: SORT(title -reverse)\n\n\t\tLIMIT()\t\t\tLimits the output to the specified number of results.\n\t\t\t\t\t\tLimit is applied after SORT().\n\n\t\t\t\t\t\t\tExample: LIMIT(30)\n\t\t\t\t\t\t\t\tWill only show 30 results of nodes with the specified INCLUDE()/EXCLUDE() parameters.\n\n\n\t\tTREE()\t\t\tThe default output, if no other is specified, is a list of (unique) nodes specified \n\t\t\t\t\t\tby the combination of INCLUDE() with EXCLUDE(). \n\t\t\t\t\t\tTo see instead a tree representation of each node and its descendants, if any, use TREE(), providing a level of depth, such as: TREE(5). To show unlimited depth (until recursion), use the asterisk: TREE(*)\n\n\t\tCOLLECT()\t\tAggregates occurrences of metadata, including timestamps, \n\t\t\t\t\t\tand surrounding contents.\n\t\t\t\t\t\tAccepts key/value pais \n\t\t\t\t\t\tReturns a seperate item for each occurence.\n\n\t\t\t\t\t\t\tExample: COLLECT(timestamp=*)\n\t\t\t\t\t\t\t\n\t\tSHOW()\t\t\tSupplies a template for the output of each result. \n\t\t\t\t\t\tAccepts keynames, denoted with `$`, arbitrary text, and Unicode characters including \\n, \\r, \\t.\n\n\t\t\t\t\t\tWords preceded by `$` are are evaluated as metadata keys, replaced in the output by their value(s).\n\t\t\t\t\t\tNote that key names themselves are not displayed in the output. Add keynames manually if you want them included.\n\n\t\t\t\t\t\t\tExample: SHOW(Author: $author, Date: $date\\n)\n\n\t\t\t\t\t\tIn addition to all user-defined metadata keys, the following tokens are included:\n\n\t\t\t\t\t\tSHOW(\n\n\t\t\t\t\t\t\t$title \n\t\t\t\t\t\t\tDisplays the node title, default or via the `title` meta key\n\n\t\t\t\t\t\t\t$link\n\t\t\t\t\t\t\tDisplays a link to the node\n\n\t\t\t\t\t\t\t$date \n\t\t\t\t\t\t\tDisplays the node's date in the project's default timestamp format\n\n\t\t\t\t\t\t\t$meta\n\t\t\t\t\t\t\tShorthand to show all metadata for every node, formatted as by \"consolidate metadata\"\n\n\t\t\t\t\t\t\t$contents:120\n\t\t\t\t\t\t\tDisplays the contents of the node. Optional excerpt/length specifier after the colon\n\t\t\t\t\t\t\t)\n\t\t\n\t\tHEADER()\t\tAdds additional arbitrary/freeform text to the beginning of the output. This can include any syntax \n\t\t\t\t\t\tvalid inside Urtext nodes, including metadata. Also includes unicode characters such as \\n for new line.\n\t\t\n\t\tFOOTER()\t\tAdds additional arbitrary/freeform text to the end of the output. Same as for HEADER().\n\t\n\t\tMARKDOWN()\t\tOutputs a Markdown representaion of the node(s) into another node or into an external file.\n\t\t\t\t\t\tWill include all hierarchically nested nodes using Markdown heading format.\n\t\t\t\t\t\tSee FORMAT() for ways to preformat the output.\n\n\t\t\t\t\t\tAccepts one or more semicolon- or newline-separated links to nodes or files (see | Linking to Files and Internet Links >)\n\n\t\t\t\t\t\tTo include all nodes pointed to from the root file, recursively, use the flag:\n\t\t\t\t\t\t\n\n\t\tHTML()\t\t\tAs for MARKDOWN(), but outputs as HTML.\n\n\t\tPLAINTEXT()\t\tAs for MARKDOWN(), but outputs Plaintext (Urtext syntax stripped out, \n\t\t\t\t\t\tincluding metadata and dynamic definitions.)\n\n\t\t\t\t\t\tCan be used, for instance, to export a node or nodes to a non Urtext text file\n\n\t\t]]  \n}\n\n\n\n{ Escaping and Embedding _\n \n\tUrtext allows embedded syntaxes and pass markers to escape sections of text from both Urtext parsing and Sublime Text syntax highlighting. Note that no text content wrapped between pass markers will appear in Urtext dynamic output, since characters in other syntaxes would have unpredictable interactions.\n\n\n\t{  Generic \n\t\t\n\t\t`Similar to its use in in Markdown, the backtick designates code, plaintext, or preformatted text that should be escaped/ignored.` }\n\n\tFor larger regions of text, or to embed other syntaxes, us the following:\n\n\n\t{ HTML\n\n\t\t%%-HTML\n\n\t\t\t<div class=\"example\">\n\t\t\t\tExample HTML\n\t\t\t</div>\n\n\t\t%%-HTML-END\n\t   }\n\n\n\t{ JSON\n\n\t\t%%-JSON\n\n\t\t\t{ \t\"title\" : \"example JSON \",\n\t\t\t\t\"example\" : [], \n\t\t\t}\n\n\t\t%%-JSON-END\n\t}\n\n\t{ Python\n\n\t\t%%-PYTHON\n\t\t\n\t\t# Example\n\t\tdef times_ten(i):\n\t\t\treturn i*10\n\n\t\t%%-PYTHON-END   \n\t}\n\n\n\t{ Plaintext\n\n\t\t%%-PLAINTEXT\n\n\t\t\tThis text will get no syntax highlighting.\n\n\t\t%%-PLAINTEXT-END \n\t\t}\n\n\n\n\t{ Documentation\n\n\t\t%%-DOC\n\n\t\tThe \"DOC\" pass marker is used in parts of this documentation in order to Urtext syntax highlighting without parse or execute anything, for documentation and example purposes.\n\n\t\t%%-DOC-END\n\n\t\t} }\n\n\n{ File Naming _\n\n\tSince node identities are independent of their filenames, you can use any naming convention you want. Urtext can also rename files automatically in convenient formats based on their title and/or other metadata. Renaming by number is useful, for instance, if you want file-level nodes easily readable inside a file system, mobile app, or other file browser.\n\n\tTo rename a file, select \"Rename File from Meta\" from the command palette (Command-P). By default, this will rename the files alphabetically by title, with numerical prefixes to preserve ordering where the filesystem might not.\n\n\tThis behavior can be changed, if desired, by modifying the `filenames` key of project settings\n\tSee | project_settings >\n\n\tTo rename multiple files at once, see | Reindex Files > below:\n\n}\n\n{ Reindex Files _\n\n\t\"Reindex Files\" renames all filnames in your project according to the `filenames` key in | project_settings >\n\n}\n\n\n\n{ History _\n\n\tTo access a file's history, use ctrl-shift-G and select a snapshot from the dropdown menu.\n\n\tUrtext has a light built-in versioning system that tracks edits at intervals. It is not necessary to take any explicit actions in order to utilize this. Urtext creates a series of nondestructive snapshots, with each snapshot being a \"diff\", or record of changes, since the previous snapshot. When a previous state is restored, no \"checkout\" or \"rewind\" occurs; rather, the newly restored state is appended to the history. Therefore, in addition to functioning as version control, the feature can also be used as an infinite and non-destructive \"undo/redo\" editing history that saves state when the file is closed. The default interval is 10 seconds, and can be modified in project_settings. \n\n\tHistories are stored in the /history folder inside the project, as .diff files. This folder requires no user involvement. If using another version control tool such as Git, you may wish to add the /history folder to your .gitignore file, so that only explicitly committed versions of your project are visible in distributed repositories.\n\n\t<Fri., Oct. 15, 2021, 01:41 PM>\n\n\t}\n\n{ Using Multiple Projects _\n\n\n\tTo use multiple projects at once, there is a project context manager. When you initially pass a path to Urtext, it looks recursively in all sub folders for additional projects. If it finds a compilable Urtext project in any one, it adds these to the context manager.  You can then freely switch among projects, either explicitly, or using links between the projects (described below). When switching projects, all Urtext's features, content and behavior, including links, compiling, and all functions linked to UI buttons, will operate in the context of the selected project. \n\n\tYou can put all your Urtext projects into sub folders of a single path. Alternatively, you may put them anyplace in the file system and choose as your Urtext root a folder that encompasses them all. Compiling may take longer if Urtext has to search through many unused directories. \n\n\tUsing the standalone Urtext module, it is possible to only instantiate a single project, without the context manager. The current implementations in Sublime and Pythonista, however, use the context manager by default, even if you are only using a single project.\n\n\tRecall that what defines a project is a folder. This is also what separates it from other projects. If you add other Urtext project folders into the initial path, they will all be accessible from the same project list.\n\n\tTo switch among projects in Sublime, select \"Urtext: Select Project\" from the command palette or press Ctrl-Shift-O.\n\n\t{ Project Naming (Identification) _\n\n\tUnlike nodes, projects are uniquely identified by name. For this reason, each project must have an unique name within the running instance of Urtext. Projects can be named using the `project_title` key in the `project_settings` node. If no name is present, the project's name becomes its absolute path in the file system. \n\n\t}\n\n\t{ Cross-Project Linking _\n\n\t\tYou may link from one project to another within the text. To so this, use the following syntax:\n\t\t\n\t\t=>\"name or path of the other project\"\n\t    (This link is only an example and is non-functioning)\n\n\t    To add a specific node, add the \"pipe and angle-bracket\" notation followed by a node title:\n\t\t=>\"name or path of the other project\"| title >\n\n\t\tFollowing this link will change the project context to the named project and open the specified node, if any.\n\n\t\t}\n\n\t}\n", "1676550010": "@@ -6321,16 +6321,28 @@\n s file:%0A\n+%09%09%09%09 %25%25JSON%0A\n %09%09%09%09 %0A%09%09\n@@ -6420,17 +6420,16 @@\n %09%09%09%0A%09%09%09%09\n-%25\n %25-JSON-E\n", "1676551173": "@@ -19135,54 +19135,9 @@\n %0A%09%7D%0A\n-                                           %7D  \n+%7D\n     \n", "1676549983": "@@ -5650,25 +5650,24 @@\n %0A%09%09%09%09%0A%09%09%09%09%25%25\n--\n JSON%0A%09%09%09%09%0A%09%09\n@@ -5730,25 +5730,16 @@\n %09%0A%09%09%09%09%25%25\n--JSON-END\n %0A%0A%09%09%09...\n", "1676549996": "@@ -6325,21 +6325,8 @@\n le:%0A\n-%09%09%09%09 %25%25-JSON%0A\n %09%09%09%09\n", "1676550022": "@@ -6421,25 +6421,17 @@\n %09%09%0A%09%09%09%09%25\n--JSON-END\n+%25\n %09%09%0A%09%09 %0A%09\n@@ -6611,25 +6611,24 @@\n e:%0A%09%09%09%0A%09%09%09%25%25\n--\n JSON%0A%09%09%09 %22se\n@@ -6680,33 +6680,24 @@\n ,%0A%09%09%09%7D%0A%09%09%09%25%25\n--JSON-END\n %0A%09%7D%0A%0A%09%7B  Sav\n@@ -6974,25 +6974,16 @@\n %09%09%7D%0A%09%09%25%25\n--JSON-END\n %0A%09%0A%09%7D%0A%0A%09\n"}