Node IDs _

Node IDs uniquely identify each node in a project. Nodes IDs are preceded by the `@` sign and then three alphanumberic (0-9, a-z) characters, resulting in over 46,000 unique identifiers per project. Node IDs are generated automatically by Urtext; every newly created node is assigned an available unused ID as a metadata entry:

	@01q <- This is not an example; it specifies the ID of this node.

f>./files/example-node-id.png

Syntax highlighting shades node IDs to an unobtrusive color.

The node ID can appear anywhere; location does not affect their functionality. If more than one Node ID appears in a node, only the first one is used as the Node's ID; the rest are treated (indexed) as regular metadata.

IDs have no special meaning, do not represent the order of node creation within a project, and are not related to or "hashed" from node content. They are assigned in random order so the probability of accidentally creating two nodes with the same ID is minimal when using the project across many devices.

When an ID is deleted from a project, new nodes are later assigned to vacant node IDs.

{ Inserting a Node ID manually

	| Add Node ID: `ctrl + shift + i` >gv9  will insert a new and unused node anywhere in the project, in case you delete one or want to insert one manually.  @04s}

Node IDs can also be user-created arbitrarily if for some reason you want to. If you do this, note that node IDs are case-insensitive.

{ 	Duplicate Node IDs

	If two nodes end up with the same ID, only one (the first one found) will be assigned the ID. The entire second file containing the node with the duplicate ID will contain a warning message. See | Errors and Warnings >bpk

	To correct the problem, it is necessary to manually change the duplicate ID to a new one. To ensure the corrected node ID is unique, it is recommended to use | Add Node ID: `ctrl + shift + i` >gv9 for this (as described above), after the rest of the project is compiled.
	
@bzv}
